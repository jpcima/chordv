.TH "Processor" 3 "Sun Apr 15 2018" "Version 0.1" "Chord V" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Processor
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <processor\&.h>\fP
.PP
Inherits QObject\&.
.PP
Inherited by \fBProcessorChord\fP, \fBProcessorLyrics\fP, and \fBProcessorText\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBAlign\fP { \fBleft\fP, \fBcenter\fP, \fBright\fP }"
.br
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBPDFMade\fP (QString file)"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBProcessor\fP (Ui::MainWindow *ui1, Ui::FormConfig *ui2)"
.br
.ti -1c
.RI "void \fBrun\fP ()"
.br
.ti -1c
.RI "\fB~Processor\fP ()"
.br
.ti -1c
.RI "void \fBprocess\fP ()"
.br
.ti -1c
.RI "void \fBsetCompress\fP (bool compress)"
.br
.ti -1c
.RI "virtual void \fBsetColNumber\fP (int columber)"
.br
.ti -1c
.RI "virtual void \fBsetBpm\fP (int bpm)"
.br
.ti -1c
.RI "virtual void \fBsetRytm\fP (QString rythm)"
.br
.ti -1c
.RI "virtual bool \fBisChorus\fP (QString text)"
.br
.ti -1c
.RI "void \fBsetCoverMade\fP (bool status)"
.br
.ti -1c
.RI "bool \fBgetCoverMade\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetCoverTitle\fP (QString covertitle)"
.br
.ti -1c
.RI "QString \fBgetCoverTitle\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetCoverSubtitle\fP (QString coversubtitle)"
.br
.ti -1c
.RI "QString \fBgetCoverSubtitle\fP ()"
.br
.ti -1c
.RI "void \fBsetSocMode\fP (bool socmode)"
.br
.ti -1c
.RI "void \fBsetRefrain\fP (bool refrain)"
.br
.ti -1c
.RI "virtual void \fBnewPage\fP ()"
.br
.ti -1c
.RI "virtual void \fBdisplayPageTitle\fP (QString titile)"
.br
.ti -1c
.RI "virtual void \fBdisplayPageSubtitle\fP (QString subtitles)"
.br
.ti -1c
.RI "virtual void \fBdisplayLyrics\fP ()"
.br
.ti -1c
.RI "virtual void \fBCover\fP (QString title, QString subtitle)"
.br
.ti -1c
.RI "virtual void \fBdoChords\fP ()"
.br
.ti -1c
.RI "virtual void \fBdisplayChordsForSong\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetColBreak\fP (QString line)"
.br
.ti -1c
.RI "virtual void \fBdoColumnBreak\fP (QString line)"
.br
.ti -1c
.RI "virtual void \fBsave\fP ()"
.br
.ti -1c
.RI "virtual void \fBaddFooter\fP ()"
.br
.ti -1c
.RI "virtual void \fBmakePageNumber\fP ()"
.br
.RI "makePageNumber display page number on each page "
.ti -1c
.RI "virtual PoDoFo::PdfRect \fBPageSize\fP (double \fBleft\fP=0, double bottom=0, double width=210, double height=297)"
.br
.ti -1c
.RI "void \fBincludeInfo\fP (QString author='', QString title='', QString subtitle='', QString date=QDate::currentDate()\&.toString('dd/MM/aaaa'))"
.br
.ti -1c
.RI "virtual int \fBcalcColumn\fP ()"
.br
.ti -1c
.RI "virtual int \fBcalcLine\fP ()"
.br
.ti -1c
.RI "virtual void \fBFollowingLine\fP ()"
.br
.ti -1c
.RI "virtual void \fBincludeChorus\fP (QString text)"
.br
.ti -1c
.RI "virtual void \fBincludeSoc\fP ()"
.br
.ti -1c
.RI "virtual void \fBincludeEoc\fP ()"
.br
.ti -1c
.RI "virtual void \fBincludeRefrain\fP (QString text)"
.br
.ti -1c
.RI "virtual void \fBincludeSor\fP ()"
.br
.ti -1c
.RI "virtual void \fBincludeEor\fP ()"
.br
.ti -1c
.RI "virtual QString \fBCategory\fP ()"
.br
.RI "m_category category in config file (file\&.conf) Chordbook,LyricsBook,MemoryMode,TextBook "
.ti -1c
.RI "double \fBmm\fP (int value)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "double \fBTitlePosition\fP ()"
.br
.ti -1c
.RI "double \fBImagePosition\fP ()"
.br
.ti -1c
.RI "double \fBText\fP (PoDoFo::PdfDocument *doc, QString text, double x, double y, \fBFontButton\fP *fb, \fBAlign\fP align=\fBleft\fP, double scale=1)"
.br
.RI "Text\&. "
.ti -1c
.RI "double \fBTextInBox\fP (PoDoFo::PdfDocument *doc, QString text, double x, double y, \fBFontButton\fP *fb, \fBAlign\fP align=\fBleft\fP, double scale=1)"
.br
.ti -1c
.RI "virtual void \fBNextLine\fP (int num=0)"
.br
.ti -1c
.RI "virtual int \fBcurrentColumn\fP ()"
.br
.ti -1c
.RI "virtual int \fBnextColumn\fP (int current)"
.br
.ti -1c
.RI "virtual PoDoFo::PdfRect \fBLineToc\fP (QString text, double width, double x, double y, \fBFontButton\fP *fb, int pagenumber)"
.br
.RI "LineToc print each line in toc\&. "
.ti -1c
.RI "int \fBTocColSize\fP ()"
.br
.ti -1c
.RI "void \fBsavemem\fP ()"
.br
.ti -1c
.RI "void \fBopenExistingFile\fP ()"
.br
.ti -1c
.RI "int \fBNbPagesInToc\fP (int nbNormalPages)"
.br
.RI "NbPagesInToc return the number in toc\&. "
.ti -1c
.RI "void \fBFinishPage\fP (PoDoFo::PdfPainter *painter)"
.br
.RI "FinishPage replace painter\&.FinishPage, usefull to add watermark\&. "
.ti -1c
.RI "void \fBaddTocAtBegining\fP ()"
.br
.ti -1c
.RI "void \fBaddTocAtEnd\fP ()"
.br
.ti -1c
.RI "int \fBFirstPageNumber\fP ()"
.br
.ti -1c
.RI "int \fBNbPageCover\fP ()"
.br
.ti -1c
.RI "void \fBmemorizeChords\fP (QString line)"
.br
.RI "memorizeChords memorize \fBChord\fP for the song in m_BufChords; "
.ti -1c
.RI "virtual void \fBaddToc\fP ()"
.br
.RI "addToc add toc "
.ti -1c
.RI "virtual void \fBaddLinkInToc\fP ()"
.br
.RI "addLinkInToc add link in toc "
.ti -1c
.RI "void \fBdisplayChord\fP (QString chord, int &line, int &column, int size, QString lang)"
.br
.ti -1c
.RI "virtual void \fBdisplayRytm\fP ()"
.br
.ti -1c
.RI "virtual void \fBdisplayBpm\fP ()"
.br
.ti -1c
.RI "bool \fBisColBreak\fP (QString line)"
.br
.ti -1c
.RI "void \fBBufLyricsNormailisation\fP ()"
.br
.ti -1c
.RI "void \fBaddCol\fP (int &col, int num)"
.br
.ti -1c
.RI "virtual void \fBAllocatePage\fP ()"
.br
.RI "AllocatePage\&. "
.ti -1c
.RI "virtual void \fBsetDuration\fP (QString duration)"
.br
.ti -1c
.RI "virtual void \fBsetKey\fP (QString key)"
.br
.ti -1c
.RI "virtual void \fBsetYear\fP (int year)"
.br
.ti -1c
.RI "virtual void \fBsetCopyright\fP (QString copyright)"
.br
.ti -1c
.RI "virtual void \fBsetAlbum\fP (QString album)"
.br
.ti -1c
.RI "virtual void \fBsetArtist\fP (QString artist)"
.br
.ti -1c
.RI "virtual void \fBsetArranger\fP (QString arranger)"
.br
.ti -1c
.RI "virtual void \fBsetLyricist\fP (QString lyricist)"
.br
.ti -1c
.RI "virtual void \fBsetComposer\fP (QString composer)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "bool \fBm_compress\fP"
.br
.RI "m_compress allow to compress lines to fill a page "
.ti -1c
.RI "bool \fBm_covermade\fP"
.br
.RI "m_covermade true if the cover is made "
.ti -1c
.RI "bool \fBm_covertitleexist\fP"
.br
.RI "m_covertitleexist true if there is a cover title is present in doc "
.ti -1c
.RI "bool \fBm_covertsubtitleexist\fP"
.br
.RI "m_covertsubtitleexisttrue if there is a subtitlecover is present in doc "
.ti -1c
.RI "int \fBm_colnumber\fP"
.br
.RI "m_colnumber number of column if avalaible for the media "
.ti -1c
.RI "QString \fBm_covertitle\fP"
.br
.RI "m_covertitle : title of the cover "
.ti -1c
.RI "QString \fBm_coversubtitle\fP"
.br
.RI "m_coversubtitle subtile of the cover "
.ti -1c
.RI "QStringList \fBm_subtitle\fP"
.br
.RI "m_subtitle subtitle of the cover "
.ti -1c
.RI "QString \fBm_title\fP"
.br
.RI "m_title title of song "
.ti -1c
.RI "bool \fBm_chorus\fP"
.br
.RI "m_chorus "
.ti -1c
.RI "bool \fBm_refrain\fP"
.br
.RI "m_refrain this is refrain ? "
.ti -1c
.RI "QString \fBm_file\fP"
.br
.RI "m_file dir where product the output file "
.ti -1c
.RI "bool \fBm_firstline\fP"
.br
.ti -1c
.RI "QString \fBm_text\fP"
.br
.ti -1c
.RI "double \fBm_initialhposition\fP"
.br
.ti -1c
.RI "Ui::FormConfig * \fBm_uiconfig\fP"
.br
.RI "m_uiconfig a pointer on type of processor include widget "
.ti -1c
.RI "Ui::MainWindow * \fBm_uimainwindow\fP"
.br
.RI "m_uimainwindow a pointer on mainwindow to get all the common informations "
.ti -1c
.RI "PoDoFo::PdfStreamedDocument * \fBm_document\fP"
.br
.RI "m_document pointer on document open in creation mode "
.ti -1c
.RI "PoDoFo::PdfMemDocument * \fBm_mdocument\fP"
.br
.RI "m_mdocument pointer on document open in addition mode "
.ti -1c
.RI "PoDoFo::PdfPage * \fBm_page\fP"
.br
.RI "m_page pointer on PdfPage "
.ti -1c
.RI "PoDoFo::PdfPainter \fBm_painter\fP"
.br
.RI "m_painter pointer on PdfPainter "
.ti -1c
.RI "PoDoFo::PdfRect * \fBm_dimension\fP"
.br
.RI "m_dimension pointer current dimention "
.ti -1c
.RI "bool \fBm_documentAllocation\fP"
.br
.RI "m_documentAllocation m_document received a new ( delete to be done ) "
.ti -1c
.RI "bool \fBm_pageAllocation\fP"
.br
.RI "m_pageAllocation m_page recevived a new ( delete to be done ) "
.ti -1c
.RI "QMap< QString, int > \fBm_tocpages\fP"
.br
.RI "m_tocpages number of pages per song ( sorted in stupid alphabetic order) "
.ti -1c
.RI "QStringList \fBm_toc\fP"
.br
.RI "m_toc list of song in incremental order "
.ti -1c
.RI "int \fBm_line\fP"
.br
.RI "m_line y current line printed "
.ti -1c
.RI "int \fBm_lineindex\fP"
.br
.ti -1c
.RI "int \fBm_column\fP"
.br
.RI "m_column x current column printed "
.ti -1c
.RI "QStringList \fBm_BufLyrics\fP"
.br
.RI "m_BufLyrics buffer with lyrics "
.ti -1c
.RI "QStringList \fBm_BufChords\fP"
.br
.RI "m_BufChords buffer with chords "
.ti -1c
.RI "QList< PoDoFo::PdfObject * > \fBm_NormalPages\fP"
.br
.RI "m_NormalPages pages for annotation links not in toc "
.ti -1c
.RI "QList< PoDoFo::PdfObject * > \fBm_TocPages\fP"
.br
.RI "m_TocPages pages for annotation links in toc "
.ti -1c
.RI "QString \fBm_projectpath\fP"
.br
.ti -1c
.RI "int \fBm_nbrealpages\fP"
.br
.ti -1c
.RI "int \fBm_positiontoc\fP"
.br
.ti -1c
.RI "QString \fBm_mode\fP"
.br
.RI "m_mode : generic, text, lyrics, memory, chord "
.ti -1c
.RI "int \fBm_tempo\fP"
.br
.ti -1c
.RI "QString \fBm_time\fP"
.br
.ti -1c
.RI "QString \fBm_composer\fP"
.br
.ti -1c
.RI "QString \fBm_lyricist\fP"
.br
.ti -1c
.RI "QString \fBm_arranger\fP"
.br
.ti -1c
.RI "QString \fBm_artist\fP"
.br
.ti -1c
.RI "QString \fBm_album\fP"
.br
.ti -1c
.RI "QString \fBm_copyright\fP"
.br
.ti -1c
.RI "int \fBm_year\fP"
.br
.ti -1c
.RI "QString \fBm_duration\fP"
.br
.ti -1c
.RI "QString \fBm_key\fP"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBProcessor::Align\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIleft \fP\fP
.TP
\fB\fIcenter \fP\fP
.TP
\fB\fIright \fP\fP
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Processor::Processor (Ui::MainWindow * ui1, Ui::FormConfig * ui2)"

.SS "Processor::~Processor ()"

.SH "Member Function Documentation"
.PP 
.SS "void Processor::addCol (int & col, int num)\fC [protected]\fP"

.SS "void Processor::addFooter ()\fC [virtual]\fP"

.SS "void Processor::addLinkInToc ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
addLinkInToc add link in toc 
.SS "void Processor::addToc ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
addToc add toc 
.SS "void Processor::addTocAtBegining ()\fC [protected]\fP"

.SS "void Processor::addTocAtEnd ()\fC [protected]\fP"

.SS "void Processor::AllocatePage ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
AllocatePage\&. 
.SS "void Processor::BufLyricsNormailisation ()\fC [protected]\fP"

.SS "int Processor::calcColumn ()\fC [virtual]\fP"

.SS "int Processor::calcLine ()\fC [virtual]\fP"

.SS "QString Processor::Category ()\fC [virtual]\fP"

.PP
m_category category in config file (file\&.conf) Chordbook,LyricsBook,MemoryMode,TextBook 
.SS "void Processor::Cover (QString title, QString subtitle)\fC [virtual]\fP"

.SS "int Processor::currentColumn ()\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::displayBpm ()\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::displayChord (QString chord, int & line, int & column, int size, QString lang)\fC [protected]\fP"

.SS "void Processor::displayChordsForSong ()\fC [virtual]\fP"

.SS "void Processor::displayLyrics ()\fC [virtual]\fP"

.SS "void Processor::displayPageSubtitle (QString subtitles)\fC [virtual]\fP"

.SS "void Processor::displayPageTitle (QString titile)\fC [virtual]\fP"

.SS "void Processor::displayRytm ()\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::doChords ()\fC [virtual]\fP"

.SS "void Processor::doColumnBreak (QString line)\fC [virtual]\fP"

.SS "void Processor::FinishPage (PoDoFo::PdfPainter * painter)\fC [protected]\fP"

.PP
FinishPage replace painter\&.FinishPage, usefull to add watermark\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpainter\fP painter on the current page 
.RE
.PP

.SS "int Processor::FirstPageNumber ()\fC [protected]\fP"

.SS "void Processor::FollowingLine ()\fC [virtual]\fP"

.SS "bool Processor::getCoverMade ()\fC [inline]\fP"

.SS "QString Processor::getCoverSubtitle ()\fC [inline]\fP"

.SS "QString Processor::getCoverTitle ()\fC [inline]\fP"

.SS "double Processor::ImagePosition ()\fC [protected]\fP"

.SS "void Processor::includeChorus (QString text)\fC [virtual]\fP"

.SS "void Processor::includeEoc ()\fC [virtual]\fP"

.SS "void Processor::includeEor ()\fC [virtual]\fP"

.SS "void Processor::includeInfo (QString author = \fC''\fP, QString title = \fC''\fP, QString subtitle = \fC''\fP, QString date = \fCQDate::currentDate()\&.toString('dd/MM/aaaa')\fP)"

.SS "void Processor::includeRefrain (QString text)\fC [virtual]\fP"

.SS "void Processor::includeSoc ()\fC [virtual]\fP"

.SS "void Processor::includeSor ()\fC [virtual]\fP"

.SS "bool Processor::isChorus (QString text)\fC [virtual]\fP"

.SS "bool Processor::isColBreak (QString line)\fC [protected]\fP"

.SS "PdfRect Processor::LineToc (QString text, double width, double x, double y, \fBFontButton\fP * fb, int pagenumber)\fC [protected]\fP, \fC [virtual]\fP"

.PP
LineToc print each line in toc\&. 
.PP
\fBParameters:\fP
.RS 4
\fItext\fP : text to print 
.br
\fIwidth\fP : width limited to print 
.br
\fIx\fP : x point to print 
.br
\fIy\fP : y point to print 
.br
\fIfb\fP : font button where to find font to print 
.br
\fIpagenumber\fP : the page number 
.RE
.PP
\fBReturns:\fP
.RS 4
a rectangle of region\&. Used by annotation link in toc 
.RE
.PP

.SS "void Processor::makePageNumber ()\fC [virtual]\fP"

.PP
makePageNumber display page number on each page 
.SS "void Processor::memorizeChords (QString line)\fC [protected]\fP"

.PP
memorizeChords memorize \fBChord\fP for the song in m_BufChords; 
.PP
\fBParameters:\fP
.RS 4
\fIline\fP the line read 
.RE
.PP

.SS "double Processor::mm (int value)"

.SS "int Processor::NbPageCover ()\fC [protected]\fP"

.SS "int Processor::NbPagesInToc (int nbNormalPages)\fC [protected]\fP"

.PP
NbPagesInToc return the number in toc\&. 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.SS "void Processor::newPage ()\fC [virtual]\fP"

.SS "int Processor::nextColumn (int current)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::NextLine (int num = \fC0\fP)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::openExistingFile ()\fC [protected]\fP"

.SS "PdfRect Processor::PageSize (double left = \fC0\fP, double bottom = \fC0\fP, double width = \fC210\fP, double height = \fC297\fP)\fC [virtual]\fP"

.SS "void Processor::PDFMade (QString file)\fC [signal]\fP"

.SS "void Processor::process ()"

.SS "void Processor::run ()"

.SS "void Processor::save ()\fC [virtual]\fP"

.SS "void Processor::savemem ()\fC [protected]\fP"

.SS "void Processor::setAlbum (QString album)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setArranger (QString arranger)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setArtist (QString artist)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setBpm (int bpm)\fC [virtual]\fP"

.SS "void Processor::setColBreak (QString line)\fC [virtual]\fP"

.SS "void Processor::setColNumber (int columber)\fC [virtual]\fP"

.SS "void Processor::setComposer (QString composer)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setCompress (bool compress)"

.SS "void Processor::setCopyright (QString copyright)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setCoverMade (bool status)\fC [inline]\fP"

.SS "void Processor::setCoverSubtitle (QString coversubtitle)\fC [virtual]\fP"

.SS "void Processor::setCoverTitle (QString covertitle)\fC [virtual]\fP"

.SS "void Processor::setDuration (QString duration)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setKey (QString key)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setLyricist (QString lyricist)\fC [protected]\fP, \fC [virtual]\fP"

.SS "void Processor::setRefrain (bool refrain)"

.SS "void Processor::setRytm (QString rythm)\fC [virtual]\fP"

.SS "void Processor::setSocMode (bool socmode)"

.SS "void Processor::setYear (int year)\fC [protected]\fP, \fC [virtual]\fP"

.SS "double Processor::Text (PoDoFo::PdfDocument * doc, QString text, double x, double y, \fBFontButton\fP * fb, \fBAlign\fP align = \fC\fBleft\fP\fP, double scale = \fC1\fP)\fC [protected]\fP"

.PP
Text\&. 
.PP
\fBParameters:\fP
.RS 4
\fItext\fP 
.br
\fIx\fP : if left it is the start of print, if center it is the center point, it left it is end of print 
.br
\fIy\fP : the y point 
.br
\fIfb\fP : ButtonFont containing informations about Font, color etc\&.\&.\&. 
.br
\fIalign\fP : \fBProcessor::left\fP \fBProcessor::center\fP or \fBProcessor::right\fP 
.br
\fIscale\fP : 1 no scale >1 will grow the default font <1 decrease the default font 
.RE
.PP
\fBReturns:\fP
.RS 4
return the x position of the end of text 
.RE
.PP

.SS "double Processor::TextInBox (PoDoFo::PdfDocument * doc, QString text, double x, double y, \fBFontButton\fP * fb, \fBAlign\fP align = \fC\fBleft\fP\fP, double scale = \fC1\fP)\fC [protected]\fP"

.SS "double Processor::TitlePosition ()\fC [protected]\fP"

.SS "int Processor::TocColSize ()\fC [protected]\fP"

.SH "Member Data Documentation"
.PP 
.SS "QString Processor::m_album\fC [protected]\fP"

.SS "QString Processor::m_arranger\fC [protected]\fP"

.SS "QString Processor::m_artist\fC [protected]\fP"

.SS "QStringList Processor::m_BufChords\fC [protected]\fP"

.PP
m_BufChords buffer with chords 
.SS "QStringList Processor::m_BufLyrics\fC [protected]\fP"

.PP
m_BufLyrics buffer with lyrics 
.SS "bool Processor::m_chorus\fC [protected]\fP"

.PP
m_chorus 
.SS "int Processor::m_colnumber\fC [protected]\fP"

.PP
m_colnumber number of column if avalaible for the media 
.SS "int Processor::m_column\fC [protected]\fP"

.PP
m_column x current column printed 
.SS "QString Processor::m_composer\fC [protected]\fP"

.SS "bool Processor::m_compress\fC [protected]\fP"

.PP
m_compress allow to compress lines to fill a page 
.SS "QString Processor::m_copyright\fC [protected]\fP"

.SS "bool Processor::m_covermade\fC [protected]\fP"

.PP
m_covermade true if the cover is made 
.SS "QString Processor::m_coversubtitle\fC [protected]\fP"

.PP
m_coversubtitle subtile of the cover 
.SS "QString Processor::m_covertitle\fC [protected]\fP"

.PP
m_covertitle : title of the cover 
.SS "bool Processor::m_covertitleexist\fC [protected]\fP"

.PP
m_covertitleexist true if there is a cover title is present in doc 
.SS "bool Processor::m_covertsubtitleexist\fC [protected]\fP"

.PP
m_covertsubtitleexisttrue if there is a subtitlecover is present in doc 
.SS "PoDoFo::PdfRect* Processor::m_dimension\fC [protected]\fP"

.PP
m_dimension pointer current dimention 
.SS "PoDoFo::PdfStreamedDocument* Processor::m_document\fC [protected]\fP"

.PP
m_document pointer on document open in creation mode 
.SS "bool Processor::m_documentAllocation\fC [protected]\fP"

.PP
m_documentAllocation m_document received a new ( delete to be done ) 
.SS "QString Processor::m_duration\fC [protected]\fP"

.SS "QString Processor::m_file\fC [protected]\fP"

.PP
m_file dir where product the output file 
.SS "bool Processor::m_firstline\fC [protected]\fP"

.SS "double Processor::m_initialhposition\fC [protected]\fP"

.SS "QString Processor::m_key\fC [protected]\fP"

.SS "int Processor::m_line\fC [protected]\fP"

.PP
m_line y current line printed 
.SS "int Processor::m_lineindex\fC [protected]\fP"

.SS "QString Processor::m_lyricist\fC [protected]\fP"

.SS "PoDoFo::PdfMemDocument* Processor::m_mdocument\fC [protected]\fP"

.PP
m_mdocument pointer on document open in addition mode 
.SS "QString Processor::m_mode\fC [protected]\fP"

.PP
m_mode : generic, text, lyrics, memory, chord 
.SS "int Processor::m_nbrealpages\fC [protected]\fP"

.SS "QList<PoDoFo::PdfObject *> Processor::m_NormalPages\fC [protected]\fP"

.PP
m_NormalPages pages for annotation links not in toc 
.SS "PoDoFo::PdfPage* Processor::m_page\fC [protected]\fP"

.PP
m_page pointer on PdfPage 
.SS "bool Processor::m_pageAllocation\fC [protected]\fP"

.PP
m_pageAllocation m_page recevived a new ( delete to be done ) 
.SS "PoDoFo::PdfPainter Processor::m_painter\fC [protected]\fP"

.PP
m_painter pointer on PdfPainter 
.SS "int Processor::m_positiontoc\fC [protected]\fP"

.SS "QString Processor::m_projectpath\fC [protected]\fP"

.SS "bool Processor::m_refrain\fC [protected]\fP"

.PP
m_refrain this is refrain ? 
.SS "QStringList Processor::m_subtitle\fC [protected]\fP"

.PP
m_subtitle subtitle of the cover 
.SS "int Processor::m_tempo\fC [protected]\fP"

.SS "QString Processor::m_text\fC [protected]\fP"

.SS "QString Processor::m_time\fC [protected]\fP"

.SS "QString Processor::m_title\fC [protected]\fP"

.PP
m_title title of song 
.SS "QStringList Processor::m_toc\fC [protected]\fP"

.PP
m_toc list of song in incremental order 
.SS "QMap<QString,int> Processor::m_tocpages\fC [protected]\fP"

.PP
m_tocpages number of pages per song ( sorted in stupid alphabetic order) 
.SS "QList<PoDoFo::PdfObject *> Processor::m_TocPages\fC [protected]\fP"

.PP
m_TocPages pages for annotation links in toc 
.SS "Ui::FormConfig* Processor::m_uiconfig\fC [protected]\fP"

.PP
m_uiconfig a pointer on type of processor include widget 
.SS "Ui::MainWindow* Processor::m_uimainwindow\fC [protected]\fP"

.PP
m_uimainwindow a pointer on mainwindow to get all the common informations 
.SS "int Processor::m_year\fC [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Chord V from the source code\&.
